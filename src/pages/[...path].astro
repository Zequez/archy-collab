---
import editorBootstrapperUrl from "@@/editor/dist/assets/index.js?url";
import { Store } from "@tomic/react";

const NAMESPACE = "archy-collab";
const fullHost = Astro.params.path || "";
console.log("FULL HOST", fullHost);
// const pathsNames = fullHost.split('/')
// const domain = fullHost[0];
// const path = fullHost.slice(1);

// const domainParts = (Astro.params.path || "").split(".").reverse();
// const topDomain = domainParts[0];
// const subdomains = domainParts.slice(1);
// const allDomains = domainParts.join(".");

// (Astro.params.path || "").slice(1);

// console.log(Astro.url.pathname);
// if (!topDomain) throw new Error("Must provide a path");

const store = new Store({
  serverUrl: "https://atomicdata.dev",
});

const resource = await store.fetchResourceFromServer(
  `https://atomicdata.dev/${NAMESPACE}/${fullHost}`
);

const htmlDocument =
  (resource.get("https://atomicdata.dev/property/html-document") as string) ||
  "";

const editorScript = `<script type="module" src="${editorBootstrapperUrl}" astroPath="${fullHost}"></script>`;

// const EditorFile = await import("@components/Editor/Editor");

function injectEditorScriptToHtml(html: string) {
  // We could parse the document, but we don't need yet.
  const bodyEnd = html.lastIndexOf("</body>");
  if (bodyEnd !== -1) {
    return html.slice(0, bodyEnd) + editorScript + html.slice(bodyEnd);
  } else {
    return html + editorScript;
  }
}
---

<pre>
  {JSON.stringify(Astro.url, null, 2)};
</pre>
<pre>
  {JSON.stringify(Astro.params, null, 2)};
</pre>

<Fragment set:html={injectEditorScriptToHtml(htmlDocument)} />
